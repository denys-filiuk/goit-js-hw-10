{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst button = document.querySelector('button');\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.show({\n        message: '\"Please choose a date in the future\"',\n        position: 'topCenter',\n      });\n      button.disabled = true;\n      return;\n    }\n\n    button.disabled = false;\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbutton.addEventListener('click', startCountdown);\n\nfunction startCountdown() {\n  if (!userSelectedDate || userSelectedDate < new Date()) {\n    alert('Please choose a date in the future');\n    return;\n  }\n\n  button.disabled = true;\n  document.querySelector('#datetime-picker').disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const timeRemaining = userSelectedDate - new Date();\n\n    if (timeRemaining <= 0) {\n      clearInterval(countdownInterval);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      return;\n    }\n\n    updateTimer(convertMs(timeRemaining));\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = pad(days);\n  document.querySelector('[data-hours]').textContent = pad(hours);\n  document.querySelector('[data-minutes]').textContent = pad(minutes);\n  document.querySelector('[data-seconds]').textContent = pad(seconds);\n}\n"],"names":["userSelectedDate","countdownInterval","button","options","selectedDates","iziToast","flatpickr","startCountdown","timeRemaining","updateTimer","convertMs","ms","days","hours","minutes","seconds","pad","value"],"mappings":"0IAMA,IAAIA,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,SAAW,GAElB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAJ,EAAmBI,EAAc,CAAC,EAE9BJ,EAAmB,IAAI,KAAQ,CACjCK,EAAS,KAAK,CACZ,QAAS,uCACT,SAAU,WAClB,CAAO,EACDH,EAAO,SAAW,GAClB,MACN,CAEIA,EAAO,SAAW,EACnB,CACH,EAEAI,EAAU,mBAAoBH,CAAO,EAErCD,EAAO,iBAAiB,QAASK,CAAc,EAE/C,SAASA,GAAiB,CACxB,GAAI,CAACP,GAAoBA,EAAmB,IAAI,KAAQ,CACtD,MAAM,oCAAoC,EAC1C,MACJ,CAEEE,EAAO,SAAW,GAClB,SAAS,cAAc,kBAAkB,EAAE,SAAW,GAEtDD,EAAoB,YAAY,IAAM,CACpC,MAAMO,EAAgBR,EAAmB,IAAI,KAE7C,GAAIQ,GAAiB,EAAG,CACtB,cAAcP,CAAiB,EAC/BQ,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EACzD,MACN,CAEIA,EAAYC,EAAUF,CAAa,CAAC,CACrC,EAAE,GAAI,CACT,CAEA,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASC,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASR,EAAY,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAIJ,CAAI,EAC5D,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAIH,CAAK,EAC9D,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAIF,CAAO,EAClE,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAID,CAAO,CACpE"}